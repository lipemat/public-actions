###################################################
# A reusable workflow for running WP-Unit tests on a plugin.
#
# Variables must be set in the calling repository.
# vars:
#   BASIC: The basic plugin slug.
#   BASIC_BRANCH: The branch of the basic plugin.
#   DIR: The directory of the plugin.
#   PRO_BRANCH: The branch of the pro plugin.
#   WP_UNIT_VERSION: The version of WP-Unit to install.
# secrets:
#   PUBLIC_ACTIONS_PRO_REPO: The token to access the pro repository.
# inputs:
#   multisite: The type of multisite to test.
#   php: The PHP version to use.
#   wp: The version of WordPress to test.
#
###################################################

name: WP Unit - Plugin

env:
  VERSION: 1.3.2
  BASIC: ${{ vars.BASIC }}
  BASIC_BRANCH: ${{ vars.BASIC_BRANCH }}
  DIR: ${{ vars.DIR }}
  PRO: ${{ vars.PRO }}
  PRO_BRANCH: ${{ vars.PRO_BRANCH }}
  TOKEN: ${{ secrets.PUBLIC_ACTIONS_PRO_REPO }}
  WP_UNIT_VERSION: ${{ vars.WP_UNIT_VERSION }}

on:
  workflow_call:
    inputs:
      multisite:
        description: Run tests on multisite or single site. Values include 'single' or 'multisite'.
        required: true
        type: string
      php:
        description: The PHP version to use.
        required: true
        type: string
      wp:
        description: The version of WordPress to test.
        required: true
        type: string

jobs:
  wp-unit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout WordPress Core
        uses: actions/checkout@v4
        with:
          repository: wordpress/wordpress
          path: wp
          ref: ${{ inputs.wp }}

      - name: Checkout the PRO and BASIC plugins
        uses: lipemat/public-actions/checkout-plugins@version/1

      - name: Checkout the public-actions repository
        uses: actions/checkout@v4
        with:
          repository: lipemat/public-actions
          path: public-actions

      - name: Setup Node and PHP
        uses: lipemat/public-actions/setup-dependencies@version/1
        env:
          NODE_VERSION: 20.11.0
          PHP_VERSION: ${{ inputs.php }}

      - name: Set up MySQL
        run: |
          sudo /etc/init.d/mysql start
          mysql -e 'CREATE DATABASE `wp-unit`;' -u root -proot    

      - name: Import MySQL Dump
        run: |
          unzip -p public-actions/resources/plugins/config/wp-unit.sql.zip | mysql -u root -proot wp-unit

      - name: Install WP-Unit
        uses: lipemat/public-actions/install-wp-unit@version/1

      - name: Add WP-Unit Config
        run: cp public-actions/resources/plugins/config/wp-unit-local-config.php content/plugins/${{ env.PRO }}/dev/wp-unit/local-config.php

      - name: Build Translations
        uses: lipemat/public-actions/plugin-translations@version/1

      - if: ${{ fromJSON(inputs.php) < 8.1 }}
        name: Run WP-Unit Legacy
        env:
          MULTISITE: ${{ inputs.multisite }}
        run: |
          php wp-unit/vendor/bin/phpunit --configuration ${{ env.DIR }}/dev/wp-unit/phpunit-legacy.xml.dist --fail-on-warning
        shell: bash

      - if: ${{ fromJSON(inputs.php) >= 8.1 }}
        name: Run WP-Unit
        env:
          MULTISITE: ${{ inputs.multisite }}
        run: |
          php wp-unit/vendor/bin/phpunit --configuration ${{ env.DIR }}/dev/wp-unit/phpunit.xml.dist --fail-on-warning
        shell: bash
